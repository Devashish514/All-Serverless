Resources:
  createUserResolvers:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      DataSourceName:
        Fn::GetAtt: UserTableDataSource.Name
      TypeName: Mutation
      FieldName: createUser
      Runtime:
        Name: 'APPSYNC_JS'
        RuntimeVersion: '1.0.0'
      Code: |
        import { util } from '@aws-appsync/utils';

        /**
        * Creates a new item in a DynamoDB table
        * @param ctx contextual information about the request
        */
        export function request(ctx) {
          const { input: values } = ctx.arguments;
          const key = { id: util.autoId() };
          const condition = { and: [{ id: { attributeExists: false } }] };
          console.log('--> create todo with requested values: ', values);
          return dynamodbPutRequest({ key, values, condition });
        }

        /**
        * Returns the result
        * @param ctx contextual information about the request
        */
        export function response(ctx) {
          const { error, result } = ctx;
          if (error) {
            return util.appendError(error.message, error.type, result);
          }
          return ctx.result;
        }

        /**
        * Helper function to create a new item
        * @returns a PutItem request
        */
        function dynamodbPutRequest({ key, values, condition: inCondObj }) {
          const condition = JSON.parse(util.transform.toDynamoDBConditionExpression(inCondObj));
          if (condition.expressionValues && !Object.keys(condition.expressionValues).length) {
            delete condition.expressionValues;
          }
          return {
            operation: 'PutItem',
            key: util.dynamodb.toMapValues(key),
            attributeValues: util.dynamodb.toMapValues(values),
            condition,
          };
        }
    DependsOn: GraphQlSchema
